name: CI/CD

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    env:
      ECOM_PROD: 'fans'
      ECOM_ENV: 'dev'
      VERSION_KEY: ${{ secrets.VERSION_KEY }}
      INDEX_SCRIPT: ${{ secrets.INDEX_SCRIPT }}
      MAINFEST_SCRIPT: ${{ secrets.MAINFEST_SCRIPT }}
    steps:
        - name: Set OSS env
          run: echo "OSS_WEB_BUCKET=ecom-$ECOM_ENV-$ECOM_PROD" >> $GITHUB_ENV
        - uses: melphi2020/setup-ossutil
          with:
            endpoint: "oss-cn-beijing.aliyuncs.com"
            access-key-id: ${{ secrets.OSS_ACCESS_KEY_ID }}
            access-key-secret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
        - name: Set up Cloud SDK
          uses: google-github-actions/setup-gcloud@master
          with:
            service_account_key: ${{ secrets.GOOGLE_KEYFILE }}
            export_default_credentials: true
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v1
          with:
            node-version: 12
        - uses: actions/setup-java@v1
          with:
            java-version: '12.x'
        - uses: subosito/flutter-action@v1
          with:
            channel: dev
        - run: flutter config --enable-web
        - run: flutter pub get
        - run: node -e "$VERSION_KEY" >./lib/env.dart
          env:
            ECOM_PLATFORM: 'web'
        - run: flutter test
        - run: flutter build web
        - run: uuid=$(uuidgen) && sed -i.bak 's/main.dart.js/'"$uuid"'.main.dart.js/g' build/web/index.html && mv build/web/main.dart.js build/web/"$uuid.main.dart.js"
        - name: Deploy Web
          run: |
            gsutil -m rsync -r -d build/web/ gs://cdn.${ECOM_ENV}.${ECOM_PROD}.ramboo.live/
            gcloud compute url-maps invalidate-cdn-cache ha-dev-fans --async --path "/index.html" --async --host "cdn.${ECOM_ENV}.${ECOM_PROD}.ramboo.live" --project $GCLOUD_PROJECT
        - name: upload to OSS
          run: ossutil cp -rf build/web/ oss://$OSS_WEB_BUCKET/
        - run: node -e "$VERSION_KEY" >./lib/env.dart
          env:
            ECOM_PLATFORM: 'android'
        - run: flutter build apk
        - uses: r0adkll/sign-android-release@v1
          name: Sign app APK
          id: sign_app
          with:
            releaseDirectory: build/app/outputs/flutter-apk/
            signingKeyBase64: ${{ secrets.SIGNING_KEY }}
            alias: 'key'
            keyStorePassword: ${{ secrets.KEY_PASSWORD }}
            keyPassword: ${{ secrets.KEY_PASSWORD }}
        - run: node -e "$VERSION_KEY" >./lib/env.dart
          env:
            ECOM_PLATFORM: 'ios'
        - run: flutter build ios --release --no-codesign
        - uses: actions/setup-ruby@v1
          with:
            ruby-version: '>= 2.6'
        - name: Set up Google Key
          run: |
            echo "$GOOGLE_KEYFILE" > ./ios/gc_keys.json
          env:
            GOOGLE_KEYFILE: ${{ secrets.GOOGLE_KEYFILE }}
        - uses: maierj/fastlane-action@v2.0.0
          with:
            lane: 'beta'
            subdirectory: 'ios'          
        - name: Set up SSH
          run: |
            mkdir -p ~/.ssh/
            echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
            sudo chmod 600 ~/.ssh/id_rsa
            echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts              
          env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
        - name: Get Time
          id: time
          uses: nanzm/get-time-action@v1.1
          with:
            timeZone: 8
            format: 'YYYY-MM-DD HH:mm:ss'
        - name: Set outputs
          id: vars
          run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        - name: Deploy Static Resource
          run: |
            mkdir $ECOM_GIT_VERSION
            cp ${{steps.sign_app.outputs.signedReleaseFile}} $ECOM_GIT_VERSION/
            cp build/Runner.ipa $ECOM_GIT_VERSION/
            node -e "$MAINFEST_SCRIPT" >$ECOM_GIT_VERSION/mainfest.plist
            node -e "$INDEX_SCRIPT" >/tmp/index.html
            gsutil cp /tmp/index.html gs://cdn.static.ramboo.live/$ECOM_ENV/$ECOM_PROD/index.html
            gsutil -m rsync -r -d $ECOM_GIT_VERSION gs://cdn.static.ramboo.live/$ECOM_ENV/$ECOM_PROD/$ECOM_GIT_VERSION
            gcloud compute url-maps invalidate-cdn-cache ha-dev-fans --async --path "/$ECOM_ENV/$ECOM_PROD/index.html"  --host "cdn.static.ramboo.live"  --project $GCLOUD_PROJECT
          env:
            TIME: "${{ steps.time.outputs.time }}"
            ECOM_GIT_VERSION: ${{ steps.vars.outputs.sha_short }}
